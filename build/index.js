(()=>{var e={669:(e,t,s)=>{s(818).config(),e.exports={mongoDbUrl:process.env.MONGO_DB_URL,logDbUrl:process.env.LOG_DB_URL,tokenSecretKey:process.env.JWT_SECRET,port:process.env.PORT,adminSecretKey:process.env.ADMIN_SECRET_KEY}},865:(e,t,s)=>{const a=s(37),{mongoDbUrl:r}=s(669);a.connect(r,{maxPoolSize:4});const n=a.connection;n.on("error",console.error.bind(console,"connection error:")),n.once("open",(()=>{console.log("Databse connected")})),e.exports=n},475:(e,t,s)=>{const a=s(124);s(639);const r=[];r.push(new a.transports.File({filename:"app.log"}));const n=a.createLogger({format:a.format.combine(a.format.timestamp({format:"YYYY-MM-DD HH:mm:ss"}),a.format.printf((e=>`${e.timestamp} [${e.level.toUpperCase()}]: ${e.message} ${e.meta?JSON.stringify(e.meta):""}`))),transports:r,defaultMeta:{service:"user-service"}});e.exports=n},593:(e,t,s)=>{const a=s(107),r=s(829),n=s(486),i=s(903),d=s(928),{getCurrentIPAddress:o,generateRandomAlphaNumericID:u}=s(93),{port:l,tokenSecretKey:g}=s(669),m=s(935),c=s(316);e.exports={createAdmin:async(e,t)=>{try{let{name:s,email:r,password:g,mobile:m}=e.body;if(!(s&&r&&g&&m))return t.status(400).send({status:!1,message:"All fields are required"});let{profilePic:c}=e.files;if(!c)return t.status(400).send({status:!1,message:"No profile pic uploaded"});g=await n.hash(g,10);let p=o(),f="/adminImages/",y=i.v4()+"."+c.name.split(".").pop(),I=`http://${p}:${l}${f}`,h=d.join(__dirname,"..","..","adminImages",y);c.mv(h,(e=>{e&&console.log(e)})),picObj={picName:y,picPath:I};let S={adminId:u(26),sessionToken:u(51),name:s,email:r,password:g,mobile:m,profilePic:picObj},k=await a.create(S);return t.status(201).send({status:!0,message:"Admin created",data:k})}catch(e){return t.status(500).send({status:!1,message:e.message})}},adminLogin:async(e,t)=>{try{let{email:s,password:i}=e.body;if(!s||!i)return t.status(400).send({status:!1,message:"Email and password are required"});let d=await a.findOne({email:s});if(!d)return t.status(400).send({status:!1,message:"Bad Reques!!!"});n.compare(i,d.password,(function(e,a){if(e)throw e;!async function(e){if(e){let e={},a=Date.now(),n=Math.floor(a/1e3),i=r.sign({email:d.email,adminId:d._id.toString(),iat:n},g,{expiresIn:"24h"});return e._id=d._id.toString(),e.email=s,e.token=i,t.setHeader("Authorization","Bearer",i),d.sessionToken=u(51),await d.save(),t.status(200).send({status:!0,message:"Successfully login",data:e})}t.status(401).send({status:!1,message:"Login denied"})}(a)}))}catch(e){return t.status(500).send({status:!1,message:e.message})}},getAllBookingsOfUser:async(e,t)=>{try{const{adminId:s,sessionToken:r,userId:n}=e.params;if(!s||!r)return t.status(400).send({status:!1,message:"All fields are required"});let i=await a.findOne({adminId:s,sessionToken:r});if(!i)return t.status(404).send({status:!1,message:"Bad Reques!!!"});if(i.adminId===s&&i.sessionToken===r){if(!await m.findOne({userId:n}))return t.status(404).send({status:!1,message:"User Not Found"});let e=await c.find({userId:n});return t.status(200).send({status:!0,message:"Success",data:e})}return t.status(400).send({status:!1,message:"Session Expired"})}catch(e){return t.status(500).send({status:!1,message:e.message})}},getOneDayBookings:async(e,t)=>{try{const{adminId:s,sessionToken:r}=e.params;if(!s||!r)return t.status(400).send({status:!1,message:"All fields are required"});let n=await a.findOne({adminId:s,sessionToken:r});if(!n)return t.status(404).send({status:!1,message:"Bad Reques!!!"});if(n.adminId===s&&n.sessionToken===r){let s;if(e.params.date)s=e.params.date;else{let e=new Date;const t=e.getFullYear();s=`${t}-${String(e.getMonth()+1).padStart(2,"0")}-${String(e.getDate()).padStart(2,"0")}`}let a=await c.find({BookingDate:s}),r=0;for(let e of a)r+=e.grand_total;let n={totalBookings:a,oneDayRevenue:r};return t.status(200).send({status:!0,message:"Success",data:n})}return t.status(400).send({status:!1,message:"Session Expired"})}catch(e){return t.status(500).send({status:!1,message:e.message})}},getOneWeekBookings:async(e,t)=>{try{let{adminId:s,sessionToken:r}=e.params;if(!s||!r)return t.status(400).send({status:!1,message:"All fields are required"});let n=await a.findOne({adminId:s,sessionToken:r});if(!n)return t.status(404).send({status:!1,message:"Bad Reques!!!"});if(n.adminId===s&&n.sessionToken===r){let s,a;if(e.params.startDate&&e.params.endDate)s=e.params.startDate,a=e.params.endDate;else{const e=new Date,t=e.getFullYear();a=`${t}-${String(e.getMonth()+1).padStart(2,"0")}-${String(e.getDate()).padStart(2,"0")}`;const r=new Date(e.getTime()-6048e5),n=r.getFullYear();s=`${n}-${String(r.getMonth()+1).padStart(2,"0")}-${String(r.getDate()).padStart(2,"0")}`}let r=await c.find({BookingDate:{$gte:s,$lte:a}}),n=0;if(r.length)for(let e of r)n+=e.grand_total;let i={oneWeekBookings:r,grandTotal:n};return t.status(200).send({status:!0,message:"Success",data:i})}return t.status(403).send({status:!1,message:"Session Expired"})}catch(e){return t.status(500).send({status:!1,message:e.message})}},getOneMonthBookings:async(e,t)=>{try{const{adminId:s,sessionToken:r,month:n,year:i}=e.params;if(!(s&&r&&n&&i))return t.status(400).send({status:!1,message:"All fields are required"});let d=await a.findOne({adminId:s,sessionToken:r});if(!d)return t.status(404).send({status:!1,message:"Bad Reques!!!"});if(d.adminId===s&&d.sessionToken===r){const e=`${i}-${n}-01`,s=`${i}-${n}-31`,a=await c.find({createdAt:{$gte:e,$lte:s}});let r=0;if(a.length)for(let e of a)r+=e.grand_total;let d={oneMonthBookings:a,oneMonthRevenue:r};return t.status(200).send({status:!0,message:"Success",data:d})}return t.status(400).send({status:!1,message:"Session Expired"})}catch(e){return t.status(500).send({status:!1,message:e.message})}},getOneYearBookings:async(e,t)=>{try{const{adminId:s,sessionToken:r,year:n}=e.params;if(!s||!r||!n)return t.status(400).send({status:!1,message:"All fields are required"});let i=await a.findOne({adminId:s,sessionToken:r});if(!i)return t.status(404).send({status:!1,message:"Bad Reques!!!"});if(i.adminId===s&&i.sessionToken===r){const e=`${n}-01-01`,s=`${n}-12-31`;let a=await c.find({createdAt:{$gte:e,$lte:s}}),r=0;if(a.length)for(let e of a)r+=e.grand_total;let i={oneYearRequests:a,oneYearRevenue:r};return t.status(200).send({status:!0,message:"Success",data:i})}return t.status(400).send({status:!1,message:"Session Expired"})}catch(e){return t.status(500).send({status:!1,message:e.message})}}}},681:(e,t,s)=>{const a=s(316),r=s(935);let{getCurrentIPAddress:n}=s(93);const i=s(903),d=s(928),o=s(896),{port:u,adminSecretKey:l}=s(669),{isValidObjectId:g}=s(37);e.exports={createBooking:async(e,t)=>{try{const{userId:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"User Id is required"});if(!await r.findOne({userId:s}))return t.status(404).send({status:!1,message:"User Not Found"});let l,g,{appointment_date:m,notes:c,doctor_name:p,doctor_id:f,slot:y}=e.body;if(await a.findOne({appointment_date:m,doctor_name:p,doctor_id:f,slot:y}))return t.status(400).send({status:!1,message:"The doctor already has an appointment for given date and slot"});do{l=Math.floor(1e5+899999*Math.random()),g=await a.findOne({bookingId:l})}while(g);let I=null;if("notes_file"in e.body){let{File_Extension:t,File_Path:s,File_data:a,File_name:r}=e.body.notes_file,l=Buffer.from(a,"base64"),g=d.join(__dirname,"..","..","bookings");o.existsSync(g)||o.mkdirSync(g);let m=n(),c="/bookings/",p=i.v4()+t,f=`http://${m}:${u}${c}`,y=d.join(__dirname,"..","..","bookings",p);o.writeFileSync(y,l),I={fileName:p,filePath:f}}let h={userId:s,bookingId:l,appointment_date:m,notes:c,notes_file:I,doctor_name:p,doctor_id:f,slot:y},S=await a.create(h);return t.status(200).send({status:!0,message:"Booking created successfully",data:S})}catch(e){return t.status(400).send({status:!1,message:e.message})}},getAllSlotsOfADate:async(e,t)=>{try{let{date:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"Date is required"});let r=await a.find({appointment_date:s}),n=[];if(r.length)for(let e of r)n.push(e.slot);return t.status(200).send({status:!0,message:"Success",date:s,bookedSlots:n})}catch(e){return t.status(400).send({status:!1,message:e.message})}},getUserAllBookings:async(e,t)=>{try{let{userId:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"userId is required"});let n=await r.findOne({userId:s});if(!n)return t.status(404).send({status:!1,message:"User Not Found"});let i=await a.find({userId:n.userId});return t.status(200).send({status:!0,message:"Success",data:i})}catch(e){return t.status(400).send({status:!1,message:e.message})}},getAllBookings:async(e,t)=>{try{let{key:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"Key is required"});if(s===l){let e=await a.find({});return t.status(200).send({status:!0,message:"Success",data:e})}return t.status(403).send({status:!1,message:"NOT AUTHORIZED!!!"})}catch(e){return t.status(400).send({status:!1,message:e.message})}},getSpecificBooking:async(e,t)=>{try{let{bookingId:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"bookingId is required"});let r=await a.findById(s);return r?t.status(200).send({status:!0,message:"Success",data:r}):t.status(404).send({status:!1,message:"No booking found with this booking id"})}catch(e){return t.status(400).send({status:!1,message:e.message})}},updateBookingStatus:async(e,t)=>{try{const{bookingId:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"Booking Id is required"});const{status:r,question:n,feedback:i}=e.body;if(!r)return t.status(400).send({status:!1,message:"status is required"});if(!g(s))return t.status(400).send({status:!1,message:"Invalid Booking Id"});let d=await a.findById(s);return d?(d.booking_status=r,d.question=n||"",d.feedback=i||"",await d.save(),t.status(200).send({status:!0,message:"Booking status updated successfully",data:d})):t.status(200).send({status:!0,message:"Booking Not Found"})}catch(e){return t.status(400).send({status:!1,message:e.message})}},submitBookingByDoctor:async(e,t)=>{try{const{bookingId:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"Booking Id is required"});let r=await a.findById(s);if(!r)return t.status(400).send({status:!1,message:"Booking not found"});let n=e.body;return r.doctorInstructions=n.doctorInstructions,r.next_appointment_date=n.next_appointment_date,await r.save(),t.status(200).send({status:!0,message:"Booking submitted successfully",data:r})}catch(e){return t.status(400).send({status:!1,message:e.message})}},updateBookingFilesByDoctor:async(e,t)=>{try{let{bookingId:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"Booking Id is required"});let r=await a.findById(s);if(!r)return t.status(400).send({status:!1,message:"Booking not found"});let{ImageModel:l}=e.body,g=JSON.parse(l),{file:m}=e.files;if(!m)return t.status(400).send({status:!1,message:"No file uploaded"});let c=g.index,p=(g.img_id&&g.img_id,g.imageName,g.isNewPick),f=n(),y="/bookings/",I=i.v4()+"."+m.name.split(".").pop(),h=`http://${f}:${u}${y}`,S=d.join(__dirname,"..","..","bookings",I);if(p){m.mv(S,(e=>{if(e)throw e}));let e={fileName:I,filePath:h};return r.files.push(e),await r.save(),t.status(200).send({status:!0,message:"Booking file uploaded successfully",data:r})}{let e=r.files[c].fileName;if(e){let t=d.join(__dirname,"..","..","bookings",e);o.existsSync(t)&&o.unlinkSync(t)}m.mv(S,(e=>{if(e)throw e}));let s={fileName:I,filePath:h};return r.files[c]=s,await r.save(),t.status(200).send({status:!0,message:"Booking file uploaded successfully",data:r})}}catch(e){return t.status(400).send({status:!1,message:e.message})}}}},452:(e,t,s)=>{const a=s(406);let{getCurrentIPAddress:r}=s(93);const n=s(903),i=s(928),d=s(896),{port:o,adminSecretKey:u}=s(669),{isValidObjectId:l}=s(37),g=s(475);e.exports={addCategory:async(e,t)=>{try{let{key:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"key is required"});if(s!==u)return t.status(401).send({status:!1,message:"Not authorized"});let{name:l,description:g}=e.body;if(!l||!g)return t.status(400).send({status:!1,message:"All fields are required"});let{File_Extension:m,File_Path:c,File_data:p,File_name:f}=e.body.FileUpload,y=Buffer.from(p,"base64"),I=i.join(__dirname,"..","..","categoryImages");d.existsSync(I)||d.mkdirSync(I);let h=r(),S="/categoryImages/",k=n.v4()+m,_=`http://${h}:${o}${S}`,b=i.join(__dirname,"..","..","categoryImages",k);d.writeFileSync(b,y);let w={name:l,description:g,category_image:{fileName:k,filePath:_}},A=await a.create(w);return t.status(200).send({status:!0,message:"Category Added",data:A})}catch(s){let a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return g.error(`Error in addCategory API: ${s.message}`,{meta:a}),t.status(400).send({status:!1,message:s.message})}},getCategoryById:async(e,t)=>{try{let s,{categoryId:r}=e.params;if(r){if(!l(r))return t.status(400).send({status:!1,message:"Invalid category Id"});s=await a.findById(r)}if(!s)return t.status(200).send({status:!0,message:"Category Not Found"});let n=await productModel.find({category:s._id});return t.status(200).send({status:!0,message:"Success",data:s,products:n})}catch(s){let a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return g.error(`Error in getCategoryById API: ${s.message}`,{meta:a}),t.status(400).send({status:!1,message:s.message})}},getProductByKeywords:async(e,t)=>{try{let{service_search:s}=e.body;if(!s)return t.status(400).send({status:!1,message:"Search parameter is required"});let a={$or:[{name:{$regex:s,$options:"i"}},{subTitle:{$regex:s,$options:"i"}},{description:{$regex:s,$options:"i"}}]},r=await productModel.find(a);return t.status(200).send({status:!0,message:"Success",products:r})}catch(s){let a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return g.error(`Error in getProductByKeywords API: ${s.message}`,{meta:a}),t.status(400).send({status:!1,message:s.message})}},getAllCategories:async(e,t)=>{try{let{key:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"Bad Request!!!"});if(s!==u)return t.status(403).send({status:!1,message:"NOT AUTHORIZED!!!"});let r=await a.find({});return t.status(200).send({status:!0,message:"Success",data:r})}catch(s){let a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return g.error(`Error in getAllCategories API: ${s.message}`,{meta:a}),t.status(400).send({status:!1,message:s.message})}},updateCategory:async(e,t)=>{try{let{key:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"Bad Request!!!"});if(s!==u)return t.status(403).send({status:!1,message:"NOT AUTHORIZED!!!"});let{categoryId:g}=e.params;if(!g)return t.status(400).send({status:!1,message:"Category Id is required"});if(!l(g))return t.status(400).send({status:!1,message:"Invalid Category Id"});let m=await a.findById(g);if(!m)return t.status(404).send({status:!1,message:"Category Not Found"});let c=e.body;if("name"in c&&(m.name=c.name),"description"in c&&(m.description=c.description),"FileUpload"in c){let{File_Extension:t,File_Path:s,File_data:a,File_name:u}=e.body.FileUpload,l=Buffer.from(a,"base64"),g=r(),c="/categoryImages/",p=n.v4()+t,f=`http://${g}:${o}${c}`,y=i.join(__dirname,"..","..","categoryImages",p),I=m.category_image.fileName,h=i.join(__dirname,"..","..","categoryImages",I);d.existsSync(h)&&d.unlinkSync(h),d.writeFileSync(y,l);let S={fileName:p,filePath:f};m.category_image=S}return await m.save(),t.status(200).send({status:!0,message:"Category updated successfully",data:m})}catch(s){let a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return g.error(`Error in updateCategory API: ${s.message}`,{meta:a}),t.status(400).send({status:!1,message:s.message})}},deleteCategory:async(e,t)=>{try{let{key:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"Bad Request!!!"});if(s!==u)return t.status(403).send({status:!1,message:"NOT AUTHORIZED!!!"});let{categoryId:r}=e.params;return r?await a.findById(r)?(await a.deleteOne({_id:r}),t.status(200).send({status:!0,message:"Category deleted successfully"})):t.status(404).send({status:!1,message:"No category found with this category Id"}):t.status(400).send({status:!1,message:"CategoryId is required"})}catch(s){let a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return g.error(`Error in deleteCategory API: ${s.message}`,{meta:a}),t.status(400).send({status:!1,message:s.message})}}}},506:(e,t,s)=>{s(316),s(406);const a=s(751),r=s(845),{getCurrentIPAddress:n}=s(93),i=s(903),d=s(928),o=s(896),{port:u,adminSecretKey:l}=s(669),{isValidObjectId:g}=s(37),m=s(475);e.exports={getDashboard:async(e,t)=>{try{const{key:s,userId:n}=e.params;if(!s)return t.status(400).send({status:!1,message:"Key is required"});if(s!==l)return t.status(401).send({status:!1,message:"Not Authorized"});let i,d=await a.findOne({});d&&(i=d.bannerImages?d.bannerImages:null);let o=await r.find({});return t.status(200).send({status:!0,message:"Success",ratings:o,bannerImages:i||[]})}catch(s){let a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return m.error(`Error in getDashboard API: ${s.message}`,{meta:a}),t.status(400).send({status:!1,message:s.message})}},updateBannerImages:async(e,t)=>{try{let{key:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"Bad Request!!!"});if(s!==l)return t.status(403).send({status:!1,message:"NOT AUTHORIZED!!!"});let r=await a.findOne({});r||(r=await a.create({bannerImages:[]}));let{ImageModel:g}=e.body,m=JSON.parse(g),c=e.files.bannerImage;if(!c)return t.status(400).send({status:!1,message:"No banner image uploaded"});let p=m.index,f=(m.img_id&&m.img_id,m.imageName,m.isNewPick),y=d.join(__dirname,"..","..","bannerImages");o.existsSync(y)||o.mkdirSync(y);let I=n(),h="/bannerImages/",S=i.v4()+"."+c.name.split(".").pop(),k=`http://${I}:${u}${h}`,_=d.join(__dirname,"..","..","bannerImages",S);if(f){c.mv(_,(e=>{if(e)throw e}));let e={imageName:S,imagePath:k};r.bannerImages.push(e),await r.save();let s=r.bannerImages;return t.status(200).send({status:!0,message:"Banner added successfully",data:s})}{let e=r.bannerImages[p].imageName;if(e){let t=d.join(__dirname,"..","..","bannerImages",e);o.existsSync(t)&&o.unlinkSync(t)}c.mv(_,(e=>{if(e)throw e}));let s={imageName:S,imagePath:k};r.bannerImages[p]=s,await r.save();let a=r.bannerImages;return t.status(200).send({status:!0,message:"Banner updated successfully",data:a})}}catch(s){let a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return m.error(`Error in updateBannerImages API: ${s.message}`,{meta:a}),t.status(400).send({status:!1,message:s.message})}},deleteBannerImage:async(e,t)=>{try{let{imageId:s,key:r}=e.params;if(!s||!r)return t.status(400).send({status:!1,message:"All fields are required"});if(r!==l)return t.status(403).send({status:!1,message:"NOT AUTHORIZED!!!"});let n=await a.findOne();if(!n)return t.status(400).send({status:!1,message:"Not Found!!!"});if(n.bannerImages.length)for(let e=0;e<n.bannerImages.length;e++)if(s===n.bannerImages[e]._id.toString()){let t=n.bannerImages[e].imageName,s=d.join(__dirname,"..","..","bannerImages",t);o.existsSync(s)&&o.unlinkSync(s);let a=n.bannerImages;a.splice(e,1),n.bannerImages=a,await n.save()}let i=n.bannerImages;return t.status(200).send({status:!0,message:"Banner deleted successfully",data:i})}catch(s){let a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return m.error(`Error in deleteBannerImage API: ${s.message}`,{meta:a}),t.status(400).send({status:!1,message:s.message})}}}},939:(e,t,s)=>{const a=s(647),r=s(928),n=s(896),i=s(903),d=s(475),{isValidObjectId:o}=s(37);let{getCurrentIPAddress:u}=s(93),{port:l,adminSecretKey:g}=s(669);e.exports={addDoctor:async(e,t)=>{try{const{key:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"Key is required"});if(s!==g)return t.status(401).send({status:!1,message:"Not Authorized"});const{name:d,email:o,phone:m,experience:c,description:p}=e.body;let f=null;if("FileUpload"in e.body){let{File_Extension:t,File_Path:s,File_data:a,File_name:d}=e.body.FileUpload,o=Buffer.from(a,"base64"),g=r.join(__dirname,"..","..","doctorsImages");n.existsSync(g)||n.mkdirSync(g);let m=u(),c="/doctorsImages/",p=i.v4()+t,y=`http://${m}:${l}${c}`,I=r.join(__dirname,"..","..","doctorsImages",p);n.writeFileSync(I,o),f={fileName:p,filePath:y}}let y={name:d,email:o,phone:m,experience:c,description:p,profilePic:f},I=await a.create(y);return t.status(201).send({status:!0,message:"Doctor added successfully",data:I})}catch(s){let a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return d.error(`Error in addDoctor API: ${s.message}`,{meta:a}),t.status(500).send({status:!1,message:s.message})}},getDoctorById:async(e,t)=>{try{let{key:s,doctorId:r}=e.params;if(!s||!r)return t.status(400).send({status:!1,message:"All fields are required"});if(s!==g)return t.status(401).send({status:!1,message:"Not Authorized"});if(!o(r))return t.status(400).send({status:!1,message:"Invalid doctorId"});let n=await a.findById(r);return n?t.status(200).send({status:!0,message:"Success",data:n}):t.status(400).send({status:!1,message:"Doctor not found"})}catch(s){let a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return d.error(`Error in getDoctorById API: ${s.message}`,{meta:a}),t.status(500).send({status:!1,message:s.message})}},getAllDoctors:async(e,t)=>{try{const{key:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"Key is required"});if(s!==g)return t.status(401).send({status:!1,message:"Not Authorized"});let r=await a.find({});return t.status(200).send({status:!0,message:"Success",data:r})}catch(s){let a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return d.error(`Error in getAllDoctors API: ${s.message}`,{meta:a}),t.status(500).send({status:!1,message:s.message})}},updateDoctor:async(e,t)=>{try{let{key:s,doctorId:d}=e.params;if(!s||!d)return t.status(400).send({status:!1,message:"All fields are required"});if(s!==g)return t.status(401).send({status:!1,message:"Not Authorized"});if(!o(d))return t.status(400).send({status:!1,message:"Invalid doctorId"});let m=await a.findById(d);if(!m)return t.status(400).send({status:!1,message:"Doctor not found"});let c=e.body;if("name"in c&&(m.name=c.name),"email"in c&&(m.email=c.email),"phone"in c&&(m.phone=c.phone),"experience"in c&&(m.experience=c.experience),"description"in c&&(m.description=c.description),"FileUpload"in e.body){let t=m.profilePic.fileName;if(t){let e=r.join(__dirname,"..","..","doctorsImages",t);n.existsSync(e)&&n.unlinkSync(e)}let{File_Extension:s,File_Path:a,File_data:d,File_name:o}=e.body.FileUpload,g=Buffer.from(d,"base64"),c=u(),p="/doctorsImages/",f=i.v4()+s,y=`http://${c}:${l}${p}`,I=r.join(__dirname,"..","..","doctorsImages",f);n.writeFileSync(I,g);let h={fileName:f,filePath:y};m.profilePic=h}return await m.save(),t.status(200).send({status:!0,message:"Doctor details updated",data:m})}catch(s){let a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return d.error(`Error in updateDoctor API: ${s.message}`,{meta:a}),t.status(500).send({status:!1,message:s.message})}},deleteDoctor:async(e,t)=>{try{let{key:s,doctorId:i}=e.params;if(!s||!i)return t.status(400).send({status:!1,message:"All fields are required"});if(s!==g)return t.status(401).send({status:!1,message:"Not Authorized"});if(!o(i))return t.status(400).send({status:!1,message:"Invalid doctorId"});let d=await a.findById(i);if(!d)return t.status(400).send({status:!1,message:"Doctor not found"});let u=d.profilePic.fileName;if(u){let e=r.join(__dirname,"..","..","doctorsImages",u);n.existsSync(e)&&n.unlinkSync(e)}return await a.deleteOne({_id:i}),t.status(200).send({status:!0,message:"Doctor details deleted successfully"})}catch(s){let a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return d.error(`Error in deleteDoctor API: ${s.message}`,{meta:a}),t.status(500).send({status:!1,message:s.message})}}}},585:(e,t,s)=>{const a=s(845);let{getCurrentIPAddress:r}=s(93);const n=s(903),i=s(928),d=s(896),{port:o,adminSecretKey:u}=s(669),{isValidObjectId:l}=s(37);s(475),e.exports={addRating:async(e,t)=>{try{let{key:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"key is required"});if(s!==u)return t.status(401).send({status:!1,message:"Not authorized"});let{name:l,description:g,Rating:m}=e.body,{File_Extension:c,File_Path:p,File_data:f,File_name:y}=e.body.FileUpload,I=Buffer.from(f,"base64"),h=i.join(__dirname,"..","..","ratingImages");d.existsSync(h)||d.mkdirSync(h);let S=r(),k="/ratingImages/",_=n.v4()+c,b=`http://${S}:${o}${k}`,w=i.join(__dirname,"..","..","ratingImages",_);d.writeFileSync(w,I);let A={name:l,description:g,Rating:m,picture:{imageName:_,imagePath:b}},B=await a.create(A);return t.status(200).send({status:!0,message:"Rating Added",data:B})}catch(e){return t.status(400).send({status:!1,message:e.message})}}}},579:(e,t,s)=>{const a=s(935),r=(s(107),s(950)),{getCurrentIPAddress:n,generateRandomAlphaNumericID:i}=(s(903),s(928),s(896),s(93)),{port:d}=s(669),{isValidObjectId:o}=s(37),u=s(316),{adminSecretKey:l}=s(669);e.exports={authenticateUser:async(e,t)=>{try{let{email:s,profilePic:r,name:n,userId:i}=e.body;const d=await a.findOne({userId:i});if(d)return t.status(200).send({status:!0,message:"Authentication successful",data:d});{let e={userId:i,name:n,email:s,profilePic:r},d=await a.create(e);return t.status(200).send({status:!0,message:"Authentication successful",data:d})}}catch(e){return t.status(400).send({status:!1,message:e.message})}},updateUser:async(e,t)=>{try{const{userId:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"userId is required"});let r=await a.findOne({userId:s});if(!r)return t.status(400).send({status:!1,message:"User not found"});let n=e.body;return"name"in n&&(r.name=n.name),"phone"in n&&(r.phone=n.phone),"gender"in n&&(r.gender=n.gender),"date_of_birth"in n&&(r.date_of_birth=n.date_of_birth),"Address"in n&&("address"in n.Address&&(r.Address.address=n.Address.address),"apartment"in n.Address&&(r.Address.apartment=n.Address.apartment),"city"in n.Address&&(r.Address.city=n.Address.city),"post_code"in n.Address&&(r.Address.post_code=n.Address.post_code),"state"in n.Address&&(r.Address.state=n.Address.state)),"education"in n&&(r.education=n.education),await r.save(),t.status(200).send({status:!0,message:"User updated successfully",data:r})}catch(e){return t.status(400).send({status:!1,message:e.message})}},deleteUser:async(e,t)=>{try{let{userId:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"userId is required"});let n=await a.findOne({userId:s});if(!n)return t.status(400).send({status:!1,message:"User not found"});const{reason:i,feedback:d}=e.body;let o={user:n,userAllBookings:await u.find({userId:s})},l=JSON.stringify(o);await a.deleteOne({userId:s});let g={userId:s,deletedUserData:l,reason:i,feedback:d,deletedAt:(new Date).toLocaleString()};return await r.create(g),t.status(200).send({status:!0,message:"User deleted successfully"})}catch(e){return t.status(400).send({status:!1,message:e.message})}},getUserById:async(e,t)=>{try{let{userId:s,key:r}=e.params;if(!s||!r)return t.status(400).send({status:!1,message:"All fields are required"});if(r!==l)return t.status(403).send({status:!1,message:"NOT AUTHORIZED!!!"});let n=await a.findOne({userId:s});return n?t.status(200).send({status:!0,message:"Success",data:n}):t.status(400).send({status:!1,message:"User not found"})}catch(e){return t.status(400).send({status:!1,message:e.message})}},getAllUsers:async(e,t)=>{try{let e=await a.find({});return t.status(200).send({status:!0,message:"Success",data:e})}catch(e){return t.status(400).send({status:!1,message:e.message})}}}},797:e=>{class t extends Error{constructor(e,t,s,a){super(s),this.name=e,this.statusCode=t,this.details=a}}e.exports=t},526:(e,t,s)=>{const{isValidObjectId:a}=s(37),{tokenSecretKey:r}=s(669),n=s(107),i=s(829);e.exports={Authentication:async(e,t,s)=>{try{let a=e.headers.authorization;if(!a)return t.status(400).send({status:!1,message:"Token is required"});let n,d=a.split(" ")[1];if(!d)return t.status(400).send({status:!1,message:"Invalid token"});i.verify(d,r,((t,a)=>{if(t)throw t;n=a;let r=n.adminId;e.adminId=r,s()}))}catch(e){return t.status(500).send({status:!1,message:e.message})}},Authorization:async(e,t,s)=>{try{let r=e.adminId,{adminId:i}=e.params;if(!a(i))return t.status(400).send({status:!1,message:"Invalid userId"});let d=await n.findById(i);if(!d)return t.status(404).send({status:!1,message:"Admin not found"});let o=d._id;if(r.toString()!==o.toString())return t.status(403).send({status:!1,message:"NOT AUTHORIZED!!!"});s()}catch(e){return t.status(500).send({status:!1,message:e.message})}}}},107:(e,t,s)=>{const a=s(37),r=(a.Schema.Types.ObjectId,new a.Schema({adminId:{type:String},sessionToken:{type:String},name:{type:String},email:{type:String},password:{type:String},mobile:{type:String},profilePic:{picName:{type:String},picPath:{type:String}}},{timestamps:!0}));e.exports=a.model("Admin",r)},751:(e,t,s)=>{const a=s(37),r=new a.Schema({bannerImages:[{imageName:{type:String,default:""},imagePath:{type:String,default:""}}]},{timestamps:!0});e.exports=a.model("BannerImage",r)},316:(e,t,s)=>{const a=s(37),r=(a.Schema.Types.ObjectId,new a.Schema({userId:{type:String},bookingId:{type:String},appointment_date:{type:String,default:""},doctorInstructions:{type:String,default:""},notes:{type:String,default:""},files:[{fileName:{type:String,default:""},filePath:{type:String,default:""}}],doctor_name:{type:String},doctor_id:{type:String},slot:{type:String},notes_file:{fileName:{type:String},filePath:{type:String}},next_appointment_date:{type:String,default:""}},{timestamps:!0}));e.exports=a.model("Booking",r)},406:(e,t,s)=>{const a=s(37),r=(a.Schema.Types.ObjectId,new a.Schema({name:{type:String,default:""},description:{type:String,default:""},category_image:{fileName:{type:String,default:""},filePath:{type:String,default:""}},cat_enum:{type:String,enum:["",""]}},{timestamps:!0}));e.exports=a.model("Category",r)},950:(e,t,s)=>{const a=s(37),r=new a.Schema({userId:{type:String},deletedUserData:{type:String},reason:{type:String},feedback:{type:String},deletedAt:{type:String}},{timestamps:!0});e.exports=a.model("DeletedUser",r)},647:(e,t,s)=>{const a=s(37),r=(a.Schema.Types.ObjectId,new a.Schema({name:{type:String,default:""},email:{type:String,default:""},phone:{type:String,default:""},profilePic:{fileName:{type:String,default:""},filePath:{type:String,default:""}},experience:{type:String,default:""},description:{type:String,default:""}},{timestamps:!0}));e.exports=a.model("Doctor",r)},845:(e,t,s)=>{const a=s(37),r=new a.Schema({name:{type:String},picture:{imageName:{type:String},imagePath:{type:String}},description:{type:String},Rating:{type:String}},{timestamps:!0});e.exports=a.model("Rating",r)},935:(e,t,s)=>{const a=s(37),r=(a.Schema.Types.ObjectId,new a.Schema({userId:{type:String,unique:!0,default:""},name:{type:String,required:!0,trim:!0},profilePic:{type:String},gender:{type:String,enum:["MALE","FEMALE","OTHER","UNDEFINED"],default:"UNDEFINED"},Address:{address:{type:String,default:""},apartment:{type:String,default:""},city:{type:String,default:""},post_code:{type:String,default:""},state:{type:String,default:""}},email:{type:String,default:""},phone:{type:String,default:""},date_of_birth:{type:String,default:""}},{timestamps:!0}));e.exports=a.model("User",r)},508:(e,t,s)=>{const a=s(252).Router(),{createAdmin:r,adminLogin:n,getOneDayBookings:i,getOneWeekBookings:d,getOneMonthBookings:o,getOneYearBookings:u,getAllBookingsOfUser:l}=s(593),{Authentication:g,Authorization:m}=s(526);a.post("/api/v1/createSuperAdmin",r),a.post("/api/v1/loginSuperAdmin",n),a.get("/api/v1/getOneDayBookings/:adminId/:sessionToken/:date?",i),a.get("/api/v1/getOneWeekBookings/:adminId/:sessionToken/:startDate?/:endDate?",d),a.get("/api/v1/getOneMonthBookings/:adminId/:sessionToken/:month/:year",o),a.get("/api/v1/getOneYearBookings/:adminId/:sessionToken/:year",u),a.get("/api/v1/getUserAllBookings/:adminId/:sessionToken/:userId",l),e.exports=a},364:(e,t,s)=>{const a=s(252).Router(),{createBooking:r,getSpecificBooking:n,getUserAllBookings:i,getAllBookings:d,getAllSlotsOfADate:o,updateBookingStatus:u,submitBookingByDoctor:l,updateBookingFilesByDoctor:g}=s(681);a.post("/api/v1/createBooking/:userId",r),a.get("/api/v1/getSpecificBooking/:bookingId",n),a.get("/api/v1/getUserAllBookings/:userId",i),a.get("/api/v1/getAllBookings/:key",d),a.get("/api/v1/getAllSlots/:date",o),a.put("/api/v1/updateBookingStatus/:bookingId",u),a.put("/api/v1/submitBookingData/:bookingId",l),a.post("/api/v1/submitBookingFiles/:bookingId",g),e.exports=a},683:(e,t,s)=>{const a=s(252).Router(),{addCategory:r,getCategoryById:n,getProductByKeywords:i,getAllCategories:d,updateCategory:o,deleteCategory:u}=s(452);a.post("/api/v1/addCategory/:key",r),a.post("/api/v1/viewService/:categoryId",n),a.post("/api/v1/allProductSearchByKeywords",i),a.get("/api/v1/getAllCategories/:key",d),a.put("/api/v1/updateCategory/:key/:categoryId",o),a.delete("/api/v1/deleteCategory/:key/:categoryId",u),e.exports=a},51:(e,t,s)=>{const a=s(252).Router(),{getDashboard:r,updateBannerImages:n,deleteBannerImage:i}=s(506);a.get("/api/v1/getDashboard/:key/:userId?",r),a.put("/api/v1/addOrUpdateBanner/:key",n),a.delete("/api/v1/deleteBanner/:imageId/:key",i),e.exports=a},960:(e,t,s)=>{const a=s(252).Router(),{addDoctor:r,getDoctorById:n,getAllDoctors:i,updateDoctor:d,deleteDoctor:o}=s(939);a.post("/api/v1/addDoctor/:key",r),a.get("/api/v1/getDoctorById/:key/:doctorId",n),a.get("/api/v1/getAllDoctors/:key",i),a.put("/api/v1/updateDoctor/:key/:doctorId",d),a.delete("/api/v1/deleteDoctor/:key/:doctorId",o),e.exports=a},726:(e,t,s)=>{const a=s(252).Router(),{addRating:r}=s(585);a.post("/api/v1/addRating/:key",r),e.exports=a},768:(e,t,s)=>{const a=s(252).Router(),{authenticateUser:r,updateUser:n,getAllUsers:i,getUserById:d,deleteUser:o}=s(579);a.post("/api/v1/authenticateUser",r),a.get("/api/v1/getUser/:userId/:key",d),a.get("/api/v1/users/:key",i),a.post("/api/v1/updateUser/:userId",n),a.delete("/api/v1/deleteUser/:userId",o),a.get("/api/v1/getAllUsers",i),e.exports=a},48:(e,t,s)=>{const a=s(797),{StatusCodes:r}=s(138);e.exports={errorHandler:function(e,t,s,n){return e instanceof a?s.status(e.statusCode).json({success:!1,message:e.message,err:e.details,data:{}}):s.status(r.INTERNAL_SERVER_ERROR).json({success:!1,message:"Something went wrong",err:e,data:{}})}}},93:(e,t,s)=>{const a=s(857);e.exports={getCurrentIPAddress:()=>{let e=a.networkInterfaces();return Object.values(e).flat().filter((e=>"IPv4"===e.family&&!e.internal)).map((e=>e.address))[0]},generateRandomAlphaNumericID:function(e){let t="";for(let s=0;s<e;s++)t+="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"[Math.floor(62*Math.random())];return t}}},486:e=>{"use strict";e.exports=require("bcrypt")},268:e=>{"use strict";e.exports=require("body-parser")},174:e=>{"use strict";e.exports=require("compression")},577:e=>{"use strict";e.exports=require("cors")},818:e=>{"use strict";e.exports=require("dotenv")},252:e=>{"use strict";e.exports=require("express")},376:e=>{"use strict";e.exports=require("express-fileupload")},239:e=>{"use strict";e.exports=require("express-mongo-sanitize")},525:e=>{"use strict";e.exports=require("helmet")},900:e=>{"use strict";e.exports=require("hpp")},138:e=>{"use strict";e.exports=require("http-status-codes")},829:e=>{"use strict";e.exports=require("jsonwebtoken")},37:e=>{"use strict";e.exports=require("mongoose")},903:e=>{"use strict";e.exports=require("uuid")},124:e=>{"use strict";e.exports=require("winston")},639:e=>{"use strict";e.exports=require("winston-mongodb")},896:e=>{"use strict";e.exports=require("fs")},857:e=>{"use strict";e.exports=require("os")},928:e=>{"use strict";e.exports=require("path")}},t={};function s(a){var r=t[a];if(void 0!==r)return r.exports;var n=t[a]={exports:{}};return e[a](n,n.exports,s),n.exports}const a=s(252),r=s(268),n=s(376),i=s(577),d=s(525),o=s(174),u=s(239),l=s(900),{port:g}=s(669),{connectToDatabase:m}=s(865),{errorHandler:c}=s(48),p=a();p.use(d()),p.use(i()),p.use(o()),p.use(u()),p.use(l()),p.use(a.json({limit:"50mb"})),p.use(a.urlencoded({extended:!0,limit:"50mb"})),p.use(r.json({limit:"50mb"})),p.use(r.text()),p.use(n()),p.use(i());const f=s(508),y=s(768),I=s(683),h=s(364),S=s(51),k=s(960),_=s(726);p.use(d.contentSecurityPolicy({directives:{defaultSrc:["'self'"],scriptSrc:["'self'","'unsafe-inline'"],objectSrc:["'none'"],upgradeInsecureRequests:[]}})),p.use(d.hsts({maxAge:31536e3,includeSubDomains:!0,preload:!0})),p.use("/userImages",a.static(__dirname+"/userImages")),p.use("/doctorImages",a.static(__dirname+"/doctorImages")),p.use("/categoryImages",a.static(__dirname+"/categoryImages/")),p.use("/bannerImages",a.static(__dirname+"/bannerImages")),p.use("/courseImages",a.static(__dirname+"/courseImages")),p.use("/uploads",a.static(__dirname+"/uploads")),p.use("/bookings",a.static(__dirname+"/bookings")),p.use("/ratingImages",a.static(__dirname+"/ratingImages")),p.use("/",f),p.use("/",y),p.use("/",I),p.use("/",h),p.use("/",S),p.use("/",k),p.use("/",_),p.get("/",((e,t)=>{t.send("<h1>Doctor App is Up and Running</h1>")})),p.use(c);const b=p.listen(g,(async()=>{console.log("App is running on port",g),await m}));process.on("unhandledRejection",((e,t)=>{console.error("Unhandled Rejection at:",t,"reason:",e),b.close((()=>{process.exit(1)}))})),process.on("uncaughtException",(e=>{console.error("Uncaught Exception thrown:",e),b.close((()=>{process.exit(1)}))})),process.on("SIGTERM",(()=>{console.log("SIGTERM signal received: closing HTTP server"),b.close((()=>{console.log("HTTP server closed"),process.exit(0)}))})),process.on("SIGINT",(()=>{console.log("SIGINT signal received: closing HTTP server"),b.close((()=>{console.log("HTTP server closed"),process.exit(0)}))}))})();
//# sourceMappingURL=index.js.map